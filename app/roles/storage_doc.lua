---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by vitaliy.
--- DateTime: 05.05.2021 23:27
---
-- модуль проверки аргументов в функциях
--local checks = require('checks')

-- модуль работы с числами
--local decnumber = require('ldecnumber')
local log = require('log')

local function init_spaces()
    local document = box.schema.space.create(
    -- имя спейса для хранения документов
        'document',
    -- дополнительные параметры
        {
            -- формат хранимых кортежей
            format = {
                {'guid', 'unsigned'},
                {'bucket_id', 'unsigned'},
                {'name', 'string'},
            },
            -- создадим спейс, только если его не было
            if_not_exists = true,
        }
    )

    -- создадим индекс по guid
    document:create_index('guid', {
        parts = {'guid'},
        if_not_exists = true,
    })

    document:create_index('bucket_id', {
        parts = {'bucket_id'},
        unique = false,
        if_not_exists = true,
    })

    box.schema.user.grant('guest', 'read,write,execute', 'universe')
end


local function document_add(document)
    log.info('запросили document_add guid- %s', document.guid)
    log.info('запросили document_add bucket_id- %s', document.bucket_id)
    log.info('запросили document_add name- %s', document.name)
    -- открытие транзакции
    box.begin()

    -- вставка кортежа в спейс document
    box.space.document:insert({
        document.guid,
        document.bucket_id,
        document.name
    })

    -- коммит транзакции
    box.commit()
    return true
end

local function getDocument(guid)
    log.info('запросили getDocument - %s', guid)
    local document = box.space.document:get(guid)
    if document == nil then
        log.info('document == nil - %s', guid)
        return nil
    end
    document = {
        guid = document.guid;
        name = document.name;
    }
    log.info('document.name - %s', document.name)
    return document
end

local exported_functions = {
    document_add = document_add,
    getDocument = getDocument,
}

local function init(opts)
    if opts.is_master then
        -- вызываем функцию инициализацию спейсов
        init_spaces()

        for name in pairs(exported_functions) do
            box.schema.func.create(name, {if_not_exists = true})
            box.schema.role.grant('public', 'execute', 'function', name, {if_not_exists = true})
        end
    end

    for name, func in pairs(exported_functions) do
        rawset(_G, name, func)
    end

    return true
end

return {
    role_name = 'storage_doc',
    init = init,
    dependencies = {
        'cartridge.roles.vshard-storage',
    },
}
